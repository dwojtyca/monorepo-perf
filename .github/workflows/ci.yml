name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    types: [opened, synchronize]

env:
  TURBO_SCM_BASE: ${{ github.event_name == 'pull_request' && github.event.pull_request.base.sha || github.event.before }}

jobs:
  build:
    name: Install dependencies, check code quality and build
    timeout-minutes: 15
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          filter: "blob:none"
          fetch-depth: 0

      - name: Fetch remote branches
        run: |
          git fetch origin main:refs/remotes/origin/main
          git fetch origin ${{ github.head_ref }}:refs/remotes/origin/${{ github.head_ref }}

      - uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Detect affected packages
        id: affected
        run: |
          AFFECTED_PACKAGES=$(pnpm turbo ls --base=origin/main --head=HEAD --affected --output=json)
          AFFECTED_COUNT=$AFFECTED_PACKAGES | jq '.packages.count'

          echo "count=$AFFECTED_COUNT" >> $GITHUB_OUTPUT

          echo "Affected packages:"
          echo "$AFFECTED_PACKAGES" | jq '.packages.items'

      - name: Packages affected since last commit
        run: |
          AFFECTED_PACKAGES=$(pnpm turbo ls --base=origin/main --head=HEAD --affected --output=json)

          echo "Packages affected since last commit:"
          echo "$AFFECTED_PACKAGES" | jq '.packages.items'

      - name: Packages affected using exact origin/main and origin/new
        run: |
          AFFECTED_PACKAGES=$(pnpm turbo ls --base=origin/main --head=HEAD --affected --output=json)

          echo "Packages affected:"
          echo "$AFFECTED_PACKAGES" | jq '.packages.items'

      - name: Packages affected using exact origin/main and origin/foo
        run: |
          AFFECTED_PACKAGES=$(pnpm turbo ls --base=origin/main --head=HEAD --affected --output=json)

          echo "Packages affected:"
          echo "$AFFECTED_PACKAGES" | jq '.packages.items'

      - name: Check formatting
        run: pnpm format:check

      - name: Lint, check types and build
        if: steps.affected.outputs.count != '0'
        run: pnpm turbo check-types --affected
